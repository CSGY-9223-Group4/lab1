# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
# Trivy to output results in SARIF format and only includes vulnerabilities of severity CRITICAL and HIGH.

name: trivy

on:
  push:
    branches:
      - '**'  # This will match all branches
      
  pull_request:
    branches:
      - main
      
  schedule:
    - cron: '29 13 * * 3'

permissions:
  contents: read    # Allows reading repository contents
  statuses: write   # Allows writing commit statuses


jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/csgy-9223-group4/lab1:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        #uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        uses: aquasecurity/trivy-action@0.20.0  # stable version
        
        with:
          #image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          image-ref: 'docker.io/csgy-9223-group4/lab1:${{ github.sha }}'
          
          #format: 'template'
          #template: '@/contrib/sarif.tpl'
          
          format: 'sarif'  # copied from https://github.com/aquasecurity/trivy-action
          output: 'trivy-results.sarif'  # copied from https://github.com/aquasecurity/trivy-action
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

# Lab 3 codes
      - name: Install cosign
        run: |
          COSIGN_VERSION=v1.5.2
          curl -LO https://github.com/sigstore/cosign/releases/download/${COSIGN_VERSION}/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign
          
      - name: Generate SBOM
        uses: anchore/syft-action@v0.6.0
        with:
          image: 'docker.io/csgy-9223-group4/lab1:${{ github.sha }}'
          output-file: 'sbom.json'

      - name: Sign SBOM
        run: |
          cosign sign-blob --key ${{ secrets.COSIGN_KEY }} sbom.json
          mv sbom.json.sig sbom-signed.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: sbom-signed.json
