# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: 
      - "**"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read
  pull-requests: write  # Permission to update pull request status
  statuses: write   # Allows writing commit statuses

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        # python-version: "3.12"    # omitting version uses .python-version file
        cache: "pip"                # cache dependencies for faster build

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pip-audit==2.2.0


    - name: Format with Black # code format check
      id: black
      run: |
        black --check .

    - name: Test with pytest
      id: pytest
      run: |
        pytest

    - name: Check pip-audit version
      run: pip show pip-audit

    - name: Run pip-audit   # check all installed packages for vulnerabilities.
      id: pipaudit
      run: |
        pip-audit -v
    

    - name: Set commit status for Commit Request review
      run: |
        if [[ "${{ steps.black.outcome }}" == "success" && "${{ steps.pytest.outcome }}" == "success" && "${{ steps.pipaudit.outcome }}" == "success" ]]; then
          status="success"
        else
          status="failure"
        fi
        
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
        -d "{\"state\": \"$status\", \"context\": \"Python application\"}"
