name: In-Toto Workflow

on:
  push:
    branches: "**"  # For all pushes

permissions:
  contents: read # default to read-only
  statuses: write   # Allows writing commit statuses

jobs:
  in-toto:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install In-Toto
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install in-toto

      - name: Generate Metadata for Build
        id: build
        #run: |
        #  # Archive the entire src folder
        #  tar -czf output-artifact.tar.gz src  # Included the entire ./src folder
        #  # Create in-toto metadata using the private key from GitHub Secrets
        #  in-toto-record -n build --products output-artifact.tar.gz --key <(echo "${{ secrets.INTOTOPRIVATE }}")

        run: |
          set -e
          echo "Archiving source code..."
          tar -czf output-artifact.tar.gz src
          echo "Starting in-toto record for build..."
          echo "${{ secrets.INTOTOPRIVATE }}" > private_key.pem
          in-toto-record start -n build --signing-key private_key.pem
          echo "Generating in-toto metadata for build..."
          in-toto-record stop -n build --products output-artifact.tar.gz --signing-key private_key.pem

      - name: Generate Metadata for Test
        id: test
        #run: |
        #  # Run tests here
        #  # Create in-toto metadata using the private key from GitHub Secrets
        #  in-toto-record -n test --products test-results.xml --key <(echo "${{ secrets.INTOTOPRIVATE }}")
        
        run: |
          set -e
          echo "Running tests..."
          # Assume tests run here and generate test-results.xml
          echo "Starting in-toto record for test..."
          echo "${{ secrets.INTOTOPRIVATE }}" > private_key.pem
          in-toto-record start -n test --signing-key private_key.pem
          # Run your test commands here and ensure test-results.xml is generated
          echo "Generating in-toto metadata for test..."
          in-toto-record stop -n test --products test-results.xml --signing-key private_key.pem

      - name: Generate Metadata for Deploy
        id: deploy
        #run: |
          # Deploy your artifact here
          # Create in-toto metadata using the private key from GitHub Secrets
          #in-toto-record -n deploy --products deployed-artifact --key <(echo "${{ secrets.INTOTOPRIVATE }}")
          
        run: |
          set -e
          echo "Deploying artifacts..."
          # Assume deployment happens here and results in deployed-artifact
          echo "Starting in-toto record for deploy..."
          echo "${{ secrets.INTOTOPRIVATE }}" > private_key.pem
          in-toto-record start -n deploy --signing-key private_key.pem
          echo "Generating in-toto metadata for deploy..."
          in-toto-record stop -n deploy --products deployed-artifact --signing-key private_key.pem

      - name: Verify Artifacts
        run: |
          # Verify the artifacts using the public key from GitHub Secrets
          #in-toto-verify --layout layout.json --key <(echo "${{ secrets.INTOTOPUB }}")

          set -e
          echo "Verifying artifacts..."
          # Write the public key to a file
          printf "%s" "${{ secrets.INTOTOPUB }}" > public_key.pem
          #chmod 600 public_key.pem  # Secure the public key file
          cat public_key.pem  # Only for debugging purposes; remove after testing
          
          # Verify the artifacts
          in-toto-verify --layout layout.json --key public_key.pem

