name: Anchore Syft SBOM scan with Trivy License Check

on:
  push:
    branches: '**'

permissions:
  id-token: write
  contents: write

jobs:
  Anchore-Build-Scan:
    permissions: write-all

    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest

      - name: Scan the image and upload dependency results
        id: sbom_scan
        uses: anchore/sbom-action@latest
        with:
          image: "localbuild/testimage:latest"
          artifact-name: image.spdx.json
          dependency-snapshot: true

      - name: List SBOM Output Directory
        run: |
          echo "Contents of the SBOM action output directory:"
          ls -al /tmp/sbom-action-* || true

      - name: Create artifacts directory
        run: mkdir -p artifacts

      - name: Move SBOM artifact
        run: |
          mv /tmp/sbom-action-*/image.spdx.json artifacts/image.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: artifacts/image.spdx.json

       # New Step: Run Trivy Full License Scan using SBOM
      - name: Run Trivy Full License Scan using SBOM
        uses: aquasecurity/trivy-action@0.28.0
        with:
          # Correctly use the SBOM file as input
          input: "artifacts/image.spdx.json"  # Path to the SBOM file
          format: "json"  # Output format for the license report
          scan-type: "license"  # Perform a license scan
          full-scan: true  # Enable full license scan (including transitive dependencies)
          output: "trivy-full-license-report.json"  # Specify output file for the report
          severity: "HIGH,CRITICAL"  # Severity filter for licenses
          list-all-pkgs: false  # Optional: Do not list all packages, only those with issues
          #exit-code: '1'  # Fail the build if any issues are found
        
        #with:
        #  image-ref: "localbuild/testimage:latest"  # Correct input for specifying the image
        #  format: "json"  # Output format
        #  scan-type: "sbom"  # Correct scan type for scanning SBOM
        #  input: "artifacts/image.spdx.json"  # Specify input SBOM file
        #  output: "trivy-license-report.json"  # Specify output file for the report
        #  severity: "HIGH,CRITICAL"  # Severity filter for licenses
        #  list-all-pkgs: false  # Optional: Do not list all packages, only those with issues
        

      - name: Display Trivy License Report
        run: |
          echo "Displaying Trivy License Check results..."
          cat trivy-license-report.json

      - name: Fail the build if GPL-3.0 license is found
        run: |
          if grep -q 'GPL-3.0' trivy-license-report.json; then
            echo "GPL-3.0 license found in dependencies, which may be incompatible!"
            exit 1
          fi

      - name: Upload Trivy License Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-license-report
          path: trivy-license-report.json
      
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml
