name: License Compliance Check

on:
  push:
    branches:
      - '**'

permissions:
  id-token: write
  contents: write

jobs:
  sbom-and-license-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v4


      # Step 2: Build the Docker image
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest

      # Step 3: Generate SBOM using Anchore SBOM Action (CycloneDX format)
      - name: Scan the image and upload dependency results
        id: sbom_scan
        uses: anchore/sbom-action@latest
        with:
          image: "localbuild/testimage:latest"
          artifact-name: image.cyclonedx.json
          dependency-snapshot: true
          # Specify CycloneDX output format explicitly
          format: "cyclonedx-json"

# Step 4: Display the generated CycloneDX SBOM content
      - name: Display CycloneDX SBOM content
        run: |
          echo "Displaying the contents of the generated cyclonedx.json SBOM file:"
          SBOM_PATH=$(find /tmp -name "*.cyclonedx.json" | head -n 1)  # Dynamically find the file
          cat $SBOM_PATH
          echo "SBOM Path: $SBOM_PATH"
          
      #- name: Scan the image for vulnerabilities and licenses
      #  uses: aquasecurity/trivy-action@0.23.0
      #  with:
      #    #input: image.cyclonedx.json
      #    format: json
      #    scan-type: sbom
      #    output: trivy-license-report.json
      #    severity: HIGH,CRITICAL
      #    list-all-pkgs: false
      #    scan-ref: .
      #    ignore-unfixed: false
      #    vuln-type: os,library

      - name: Run Trivy License check using v20
        #uses: aquasecurity/trivy-action@0.20.0
        #with:
          #input: image.cyclonedx.json
          #format: json
          #scan-type: "sbom"
          #scanners: license
          
          #output: trivy-license-report.json
          #severity: HIGH,CRITICAL
          #list-all-pkgs: false
        run: |
          # Ensure the SBOM file exists at the path and then run Trivy scan on it
          trivy scanners license sbom $SBOM_PATH --format json --severity HIGH,CRITICAL --output trivy-license-report.json


      # Step 8: Display Trivy License Report
      - name: Display Trivy License Report
        run: |
          echo "Displaying Trivy License Check results..."
          cat trivy-license-report.json

      # Step 9: Fail the build if GPL-3.0 license is found
      - name: Fail the build if GPL-3.0 license is found
        run: |
          if grep -q 'GPL-3.0' trivy-license-report.json; then
            echo "GPL-3.0 license found in dependencies, which may be incompatible!"
            exit 1
          fi

      # Step 10: Upload SBOM and License Report as artifacts
      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-spdx
          path: image.spdx.json

      - name: Upload Trivy License Report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-license-report
          path: trivy-license-report.json
