name: Triv License Image

on:
  push:
    branches:
      - '**'

permissions:
  id-token: write
  contents: write

jobs:
  sbom-and-license-check:
    runs-on: ubuntu-latest

    steps:
# Step 1: Checkout the code
      - name: Step 1 Checkout the code
        uses: actions/checkout@v4


# Step 2: Build the Docker image
      - name: Step 2 Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest


    
  # Step 3
      - name: Step 3 Install Trivy
        run: |
          curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.20.0/trivy_0.20.0_Linux-64bit.tar.gz | tar xz -C /usr/local/bin
    
  # Step 4
      - name: Step 4 Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          severity: "MEDIUM,HIGH,CRITICAL"
          github-pat: ${{ secrets.GITHUB_TOKEN }}

         #Create Snapshot
          #create-snapshot: true  # This ensures that a snapshot is created and uploaded
          #snapshot-branch: main  # Ensure the snapshot is linked to the default branch (e.g., main)

# Step 5
      - name: Step 5 Upload Snapshot
        uses: actions/upload-artifact@v4
        with:
          name: dependency-snapshot
          path: '${{ github.workspace }}/dependency-results.sbom.json'
          
# Step 6 Run Trivy License Scan
      - name: Step 6 Run Trivy License Scan
        run: |
          trivy image --format json --output trivy-license-report.json --scanners license --license-full --severity UNKNOWN,HIGH,CRITICAL localbuild/testimage:latest

 #Step 7: Upload Trivy License Scan results as an artifact for later review
      - name: Step 7 Upload Trivy License Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-license-report
          path: '${{ github.workspace }}/trivy-license-report.json'

# Step 8 Run Trivy License Scan (SARIF to GitHub)
      - name: Step 8 Run Trivy License Scan
        id: License
        run: |
          trivy image --format sarif --scanners license --license-full --severity UNKNOWN,HIGH,CRITICAL localbuild/testimage:latest

 #Step 9: Upload Trivy License Scan results as an artifact for later review
      - name: Step 9 Upload License result report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.License.outputs.sarif }}
          path: '${{ github.workspace }}/trivy-license-report.json'
